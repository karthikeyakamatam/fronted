import os
import numpy as np import tensorflow as tf
from tensorflow.keras.models import Sequential
from tensorflow.keras.layers import Dense, Dropout, Flatten, Conv2D, MaxPool2D from tensorflow.keras.optimizers import Adam

import PIL
import os 
import os.path
from PIL import Image
f= r'C:\Users MGIT\Desktop\cd dataset\train\dog’ 
for file in os.listdir(f):
  f_img= f+ “/" +file 
  img=Image.open(f_img) 
  img=img.resize((112, 112)) 
  img.save(f_img)

import PIL 
import os 
import os.path
from PIL import Image
f= r'C:\Users MGIT\Desktop\cd dataset\train\cat’
for file in os.listdir(f): 
  f_img= f+ “/" +file
  img=Image.open(f_img) 
  img=img.resize((112, 112)) 
  img.save(f_img)
import PIL
import os import os.path
from PIL import Image
f= r'C:\Users MGIT\Desktop\cd dataset\test\dog’ 
for file in os.listdir(f):
  f_img= f+ “/" +file
  img=Image.open(f_img) 
  img=img.resize((112, 112)) 
  img.save(f_img)

 IMAGE_SIZE = 112
BATCH_SIZE= 32
train_data_size = 180
test_data = 20

train= tf.keras.preprocessing.image. ImageDataGenerator(rescale=1./255, rotation_range = 90, shear_range =0.2, zoom_range = 0.2, horizontal_flip = True,)
test= tf.keras.preprocessing.image. ImageDataGenerator(rescale=1./255, rotation_range = 90, shear_range =0.2, zoom_range = 0.2, horizontal_flip = True,)
model= Sequential([
Conv2D(32,(3,3),activation='relu', input_shape=(112,112,3)), MaxPool2D(2,2),
Conv2D(32,(3,3),activation=‘relu' ,input_shape=(112, 112, 3)), MaxPool2D(2,2),
Flatten(),
Dense(100, activation=‘relu' ), Dense(1, activation=‘sigmoid')
]
)

model.summary()
model.compile(‘Adam’, ‘binary_crossentropy’, [‘accuracy’]) 
model.fit(train_data, epochs=10, validation_data=test_data)
